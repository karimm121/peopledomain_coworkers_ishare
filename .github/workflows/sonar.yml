name: SonarQube Scan

on:
  push:
    branches:
      - main
      - develop
      - test
  pull_request:
    branches:
      - main
      - develop
      - test

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # ‚úÖ Step 1: Ensure SonarCloud Project Exists
      - name: Ensure SonarCloud Project Exists
        run: |
          PROJECT_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/projects/search?organization=${{ secrets.SONAR_ORG }}&projects=${{ github.repository }}")

          if [ "$PROJECT_RESPONSE" -ne 200 ]; then
            echo "üöÄ Project does not exist. Creating..."
            curl -X POST "https://sonarcloud.io/api/projects/create" \
              -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
              -d "organization=${{ secrets.SONAR_ORG }}" \
              -d "project=${{ github.repository }}" \
              -d "name=${{ github.repository }}" \
              -d "visibility=private"
          else
            echo "‚úÖ Project already exists. Proceeding..."
          fi

      # ‚úÖ Step 2: Ensure At Least One Branch Exists in SonarCloud
      - name: Ensure a Branch Exists in SonarCloud
        run: |
          BRANCHES_RESPONSE=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/project_branches/list?project=${{ github.repository }}")

          if [[ "$BRANCHES_RESPONSE" == *'"branches":[]'* ]]; then
            echo "‚ö†Ô∏è No branches found in SonarCloud. Pushing a dummy commit..."
            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"
            echo "# SonarCloud Branch Initialization" >> sonarcloud_init.txt
            git add sonarcloud_init.txt
            git commit -m "Initialize SonarCloud default branch"
            git push origin main
            sleep 10  # Allow SonarCloud to recognize the branch
          else
            echo "‚úÖ Branches found in SonarCloud. Proceeding..."
          fi

      # ‚úÖ Step 3: Explicitly Set the Default Branch in SonarCloud
      - name: Ensure Default Branch is Set in SonarCloud
        run: |
          DEFAULT_BRANCH=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/project_branches/list?project=${{ github.repository }}" | jq -r '.branches[] | select(.isMain == true) | .name')

          if [ -z "$DEFAULT_BRANCH" ] || [ "$DEFAULT_BRANCH" == "null" ]; then
            echo "‚ö†Ô∏è No default branch found. Setting 'main' as default..."
            curl -X POST "https://sonarcloud.io/api/project_branches/set_default" \
              -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
              -d "project=${{ github.repository }}" \
              -d "branch=main"
            sleep 5  # Allow SonarCloud to process the change
          else
            echo "‚úÖ Default branch already set to '$DEFAULT_BRANCH'. Proceeding..."
          fi

      # ‚úÖ Step 4: Run SonarQube Scan
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_PROJECT_KEY: "${{ github.repository }}"
          SONAR_ORG: "${{ secrets.SONAR_ORG }}"
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          export PATH="$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH"
          sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY \
                        -Dsonar.organization=$SONAR_ORG \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_TOKEN \
                        -Dsonar.branch.name=${{ github.ref_name || 'main' }}
